openapi: 3.0.0
info:
  title: Chatapp
  description: |-
    This is the API documentation for Chatapp server.

    Contact Support:  
    Email: [support@emovur.com](https://mailto:support@emovur.com)
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey
security:
  - apikeyAuth: []
tags:
  - name: platform
  - name: platform > api
  - name: platform > api > v1
  - name: platform > api > v1 > accounts
  - name: platform > api > v1 > accounts > {account_id}
  - name: platform > api > v1 > accounts > {account_id} > account_users
  - name: platform > api > v1 > agent_bots
  - name: platform > api > v1 > agent_bots > {id}
  - name: platform > api > v1 > users
  - name: platform > api > v1 > users > {id}
  - name: platform > api > v1 > users > {id} > login
  - name: public
  - name: public > api
  - name: public > api > v1
  - name: public > api > v1 > inboxes
  - name: public > api > v1 > inboxes > {inbox_identifier}
  - name: public > api > v1 > inboxes > {inbox_identifier} > contacts
  - name: >-
      public > api > v1 > inboxes > {inbox_identifier} > contacts >
      {contact_identifier}
  - name: >-
      public > api > v1 > inboxes > {inbox_identifier} > contacts >
      {contact_identifier} > conversations
  - name: >-
      public > api > v1 > inboxes > {inbox_identifier} > contacts >
      {contact_identifier} > conversations > {conversation_id}
  - name: >-
      public > api > v1 > inboxes > {inbox_identifier} > contacts >
      {contact_identifier} > conversations > {conversation_id} > messages
  - name: >-
      public > api > v1 > inboxes > {inbox_identifier} > contacts >
      {contact_identifier} > conversations > {conversation_id} > messages >
      {message_id}
  - name: survey
  - name: survey > responses
  - name: survey > responses > {conversation_uuid}
  - name: api
  - name: api > v1
  - name: api > v1 > accounts
  - name: api > v1 > accounts > {account_id}
  - name: api > v1 > accounts > {account_id} > agent_bots
  - name: api > v1 > accounts > {account_id} > agent_bots > {id}
  - name: api > v1 > accounts > {account_id} > agents
  - name: api > v1 > accounts > {account_id} > agents > {id}
  - name: api > v1 > accounts > {account_id} > canned_responses
  - name: api > v1 > accounts > {account_id} > canned_responses > {id}
  - name: api > v1 > accounts > {account_id} > custom_attribute_definitions
  - name: api > v1 > accounts > {account_id} > custom_attribute_definitions > {id}
  - name: api > v1 > accounts > {account_id} > contacts
  - name: api > v1 > accounts > {account_id} > contacts > {id}
  - name: api > v1 > accounts > {account_id} > contacts > {id} > conversations
  - name: api > v1 > accounts > {account_id} > contacts > {id} > contact_inboxes
  - name: api > v1 > accounts > {account_id} > contacts > {id} > contactable_inboxes
  - name: api > v1 > accounts > {account_id} > contacts > search
  - name: api > v1 > accounts > {account_id} > contacts > filter
  - name: api > v1 > accounts > {account_id} > automation_rules
  - name: api > v1 > accounts > {account_id} > automation_rules > {id}
  - name: api > v1 > accounts > {account_id} > portals
  - name: api > v1 > accounts > {account_id} > portals > {portal_id}
  - name: api > v1 > accounts > {account_id} > portals > {portal_id} > categories
  - name: api > v1 > accounts > {account_id} > portals > {portal_id} > articles
  - name: api > v1 > accounts > {account_id} > conversations
  - name: api > v1 > accounts > {account_id} > conversations > meta
  - name: api > v1 > accounts > {account_id} > conversations > filter
  - name: api > v1 > accounts > {account_id} > conversations > {conversation_id}
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      toggle_status
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      toggle_priority
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      assignments
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      labels
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      messages
  - name: >-
      api > v1 > accounts > {account_id} > conversations > {conversation_id} >
      messages > {message_id}
  - name: api > v1 > accounts > {account_id} > inboxes
  - name: api > v1 > accounts > {account_id} > inboxes > {id}
  - name: api > v1 > accounts > {account_id} > inboxes > {id} > agent_bot
  - name: api > v1 > accounts > {account_id} > inboxes > {id} > set_agent_bot
  - name: api > v1 > accounts > {account_id} > inbox_members
  - name: api > v1 > accounts > {account_id} > inbox_members > {inbox_id}
  - name: api > v1 > accounts > {account_id} > integrations
  - name: api > v1 > accounts > {account_id} > integrations > apps
  - name: api > v1 > accounts > {account_id} > integrations > hooks
  - name: api > v1 > accounts > {account_id} > integrations > hooks > {hook_id}
  - name: api > v1 > accounts > {account_id} > teams
  - name: api > v1 > accounts > {account_id} > teams > {team_id}
  - name: api > v1 > accounts > {account_id} > teams > {team_id} > team_members
  - name: api > v1 > accounts > {account_id} > custom_filters
  - name: api > v1 > accounts > {account_id} > custom_filters > {custom_filter_id}
  - name: api > v1 > accounts > {account_id} > webhooks
  - name: api > v1 > accounts > {account_id} > webhooks > {webhook_id}
  - name: api > v1 > profile
  - name: api > v2
  - name: api > v2 > accounts
  - name: api > v2 > accounts > {account_id}
  - name: api > v2 > accounts > {account_id} > reports
  - name: api > v2 > accounts > {account_id} > reports > summary
  - name: api > v2 > accounts > {account_id} > reports > conversations
paths:
  /platform/api/v1/accounts/{account_id}/account_users:
    get:
      tags:
        - platform > api > v1 > accounts > {account_id} > account_users
      summary: List all Account Users
      description: List all account users
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - account_id: <integer>
                  user_id: <integer>
                  role: <string>
                - account_id: <integer>
                  user_id: <integer>
                  role: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - platform > api > v1 > accounts > {account_id} > account_users
      summary: Create an Account User
      description: Create an Account User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: <integer>
                role: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                account_id: <integer>
                user_id: <integer>
                role: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - platform > api > v1 > accounts > {account_id} > account_users
      summary: Delete an Account User
      description: Delete an Account User
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/accounts/{account_id}:
    get:
      tags:
        - platform > api > v1 > accounts > {account_id}
      summary: Get an account details
      description: Get the details of an account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - platform > api > v1 > accounts > {account_id}
      summary: Update an account
      description: Update an account's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - platform > api > v1 > accounts > {account_id}
      summary: Delete an Account
      description: Delete an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/accounts:
    post:
      tags:
        - platform > api > v1 > accounts
      summary: Create an Account
      description: Create an Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/agent_bots/{id}:
    get:
      tags:
        - platform > api > v1 > agent_bots > {id}
      summary: Get an agent bot details
      description: Get the details of an agent bot
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - platform > api > v1 > agent_bots > {id}
      summary: Update an agent bot
      description: Update an agent bot's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                outgoing_url: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - platform > api > v1 > agent_bots > {id}
      summary: Delete an AgentBot
      description: Delete an AgentBot
      security:
        - apikeyAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/agent_bots:
    get:
      tags:
        - platform > api > v1 > agent_bots
      summary: List all AgentBots
      description: List all agent bots available
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  description: <string>
                  account_id: <number>
                  outgoing_url: <string>
                - id: <number>
                  name: <string>
                  description: <string>
                  account_id: <number>
                  outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - platform > api > v1 > agent_bots
      summary: Create an Agent Bot
      description: Create an agent bot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                outgoing_url: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/users/{id}/login:
    get:
      tags:
        - platform > api > v1 > users > {id} > login
      summary: Get User SSO Link
      description: Get the sso link of a user
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the user on the platform
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/users/{id}:
    get:
      tags:
        - platform > api > v1 > users > {id}
      summary: Get an user details
      description: Get the details of an user
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the user on the platform
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <number>
                role: administrator
                confirmed: <boolean>
                custom_attributes: {}
                accounts:
                  - id: <number>
                    name: <string>
                    role: administrator
                  - id: <number>
                    name: <string>
                    role: agent
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - platform > api > v1 > users > {id}
      summary: Update a user
      description: Update a user's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                email: <string>
                password: <string>
                custom_attributes: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the user on the platform
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <number>
                role: administrator
                confirmed: <boolean>
                custom_attributes: {}
                accounts:
                  - id: <number>
                    name: <string>
                    role: administrator
                  - id: <number>
                    name: <string>
                    role: agent
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - platform > api > v1 > users > {id}
      summary: Delete a User
      description: Delete a User
      security:
        - apikeyAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the user on the platform
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /platform/api/v1/users:
    post:
      tags:
        - platform > api > v1 > users
      summary: Create a User
      description: Create a User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                email: <string>
                password: <string>
                custom_attributes: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <number>
                role: administrator
                confirmed: <boolean>
                custom_attributes: {}
                accounts:
                  - id: <number>
                    name: <string>
                    role: administrator
                  - id: <number>
                    name: <string>
                    role: agent
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages/{message_id}:
    patch:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier} > conversations > {conversation_id} > messages >
          {message_id}
      summary: Update a message
      description: Update a message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                submitted_values:
                  csat_survey_response:
                    rating: <integer>
                    feedback_message: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
        - name: message_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the message
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                content: <string>
                message_type: <string>
                content_type: <string>
                content_attributes: <string>
                created_at: <string>
                conversation_id: <string>
                sender: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages:
    post:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier} > conversations > {conversation_id} > messages
      summary: Create a message
      description: Create a message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: <string>
                echo_id: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                content: <string>
                message_type: <string>
                content_type: <string>
                content_attributes: <string>
                created_at: <string>
                conversation_id: <string>
                sender: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    get:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier} > conversations > {conversation_id} > messages
      summary: List all messages
      description: List all messages in the conversation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <string>
                  content: <string>
                  message_type: <string>
                  content_type: <string>
                  content_attributes: <string>
                  created_at: <string>
                  conversation_id: <string>
                  sender: {}
                - id: <string>
                  content: <string>
                  message_type: <string>
                  content_type: <string>
                  content_attributes: <string>
                  created_at: <string>
                  conversation_id: <string>
                  sender: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations:
    post:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier} > conversations
      summary: Create a conversation
      description: Create a conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_attributes: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                inbox_id: <string>
                messages:
                  - content: <string>
                    content_type: text
                    content_attributes: {}
                    message_type: incoming
                    created_at: <integer>
                    private: <boolean>
                    attachment: {}
                    sender: {}
                    conversation_id: <number>
                  - content: <string>
                    content_type: input_select
                    content_attributes: {}
                    message_type: activity
                    created_at: <integer>
                    private: <boolean>
                    attachment: {}
                    sender: {}
                    conversation_id: <number>
                contact: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    get:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier} > conversations
      summary: List all conversations
      description: List all conversations for the contact
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  inbox_id: <string>
                  messages:
                    - content: <string>
                      content_type: form
                      content_attributes: {}
                      message_type: activity
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                    - content: <string>
                      content_type: text
                      content_attributes: {}
                      message_type: template
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                  contact: {}
                - id: <integer>
                  inbox_id: <string>
                  messages:
                    - content: <string>
                      content_type: text
                      content_attributes: {}
                      message_type: outgoing
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                    - content: <string>
                      content_type: cards
                      content_attributes: {}
                      message_type: template
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                  contact: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}:
    get:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier}
      summary: Get a contact
      description: Get the details of a contact
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                source_id: <string>
                name: <string>
                email: <string>
                pubsub_token: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - >-
          public > api > v1 > inboxes > {inbox_identifier} > contacts >
          {contact_identifier}
      summary: Update a contact
      description: Update a contact's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                identifier: <string>
                identifier_hash: <string>
                email: <string>
                name: <string>
                phone_number: <string>
                avatar_url: <string>
                custom_attributes: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
        - name: contact_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The source id of contact obtained on contact create
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                source_id: <string>
                name: <string>
                email: <string>
                pubsub_token: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}/contacts:
    post:
      tags:
        - public > api > v1 > inboxes > {inbox_identifier} > contacts
      summary: Create a contact
      description: Create a contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                identifier: <string>
                identifier_hash: <string>
                email: <string>
                name: <string>
                phone_number: <string>
                avatar_url: <string>
                custom_attributes: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                source_id: <string>
                name: <string>
                email: <string>
                pubsub_token: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /public/api/v1/inboxes/{inbox_identifier}:
    get:
      tags:
        - public > api > v1 > inboxes > {inbox_identifier}
      summary: Inbox details
      description: Get the details of an inbox
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: inbox_identifier
          in: path
          schema:
            type: string
          required: true
          description: (Required) The identifier obtained from API inbox channel
          example: <string>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                identifier: <string>
                name: <string>
                timezone: <string>
                working_hours:
                  - day_of_week: <integer>
                    open_all_day: <boolean>
                    closed_all_day: <boolean>
                    open_hour: <integer>
                    open_minutes: <integer>
                    close_hour: <integer>
                    close_minutes: <integer>
                  - day_of_week: <integer>
                    open_all_day: <boolean>
                    closed_all_day: <boolean>
                    open_hour: <integer>
                    open_minutes: <integer>
                    close_hour: <integer>
                    close_minutes: <integer>
                working_hours_enabled: <boolean>
                csat_survey_enabled: <boolean>
                greeting_enabled: <boolean>
                identity_validation_enabled: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /survey/responses/{conversation_uuid}:
    get:
      tags:
        - survey > responses > {conversation_uuid}
      summary: Get CSAT survey page
      description: >-
        You can redirect the client to this URL, instead of implementing the
        CSAT survey component yourself.
      parameters:
        - name: conversation_uuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) The uuid of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/agent_bots/{id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > agent_bots > {id}
      summary: Get an agent bot details
      description: Get the details of an agent bot in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > agent_bots > {id}
      summary: Update an agent bot
      description: Update an agent bot's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                outgoing_url: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > agent_bots > {id}
      summary: Delete an AgentBot
      description: Delete an AgentBot from the account
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agentbot to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/agent_bots:
    get:
      tags:
        - api > v1 > accounts > {account_id} > agent_bots
      summary: List all AgentBots
      description: List all agent bots available for the current account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  description: <string>
                  account_id: <number>
                  outgoing_url: <string>
                - id: <number>
                  name: <string>
                  description: <string>
                  account_id: <number>
                  outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > agent_bots
      summary: Create an Agent Bot
      description: Create an agent bot in the account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                outgoing_url: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/agents/{id}:
    patch:
      tags:
        - api > v1 > accounts > {account_id} > agents > {id}
      summary: Update Agent in Account
      description: Update an Agent in Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: agent
                availability: busy
                auto_offline: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agent to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <integer>
                role: administrator
                confirmed: <boolean>
                availability_status: available
                auto_offline: <boolean>
                custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > agents > {id}
      summary: Remove an Agent from Account
      description: Remove an Agent from Account
      security:
        - apikeyAuth: []
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the agent to be deleted
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/agents:
    get:
      tags:
        - api > v1 > accounts > {account_id} > agents
      summary: List Agents in Account
      description: Get Details of Agents in an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: busy
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > agents
      summary: Add a New Agent
      description: Add a new Agent to Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                email: <string>
                role: agent
                availability_status: available
                auto_offline: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <integer>
                role: administrator
                confirmed: <boolean>
                availability_status: available
                auto_offline: <boolean>
                custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/canned_responses/{id}:
    patch:
      tags:
        - api > v1 > accounts > {account_id} > canned_responses > {id}
      summary: Update Canned Response in Account
      description: Update a Canned Response in Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: <string>
                short_code: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the canned response to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                content: <string>
                short_code: <string>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > canned_responses > {id}
      summary: Remove a Canned Response from Account
      description: Remove a Canned Response from Account
      security:
        - apikeyAuth: []
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the canned response to be deleted
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/canned_responses:
    get:
      tags:
        - api > v1 > accounts > {account_id} > canned_responses
      summary: List all Canned Responses in an Account
      description: Get Details of Canned Responses in an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  content: <string>
                  short_code: <string>
                  account_id: <integer>
                - id: <integer>
                  content: <string>
                  short_code: <string>
                  account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > canned_responses
      summary: Add a New Canned Response
      description: Add a new Canned Response to Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: <string>
                short_code: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                content: <string>
                short_code: <string>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/custom_attribute_definitions/{id}:
    get:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_attribute_definitions >
          {id}
      summary: Get a custom attribute details
      description: Get the details of a custom attribute in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the custom attribute to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                attribute_display_name: <string>
                attribute_display_type: <string>
                attribute_description: <string>
                attribute_key: <string>
                attribute_values: <string>
                default_value: <string>
                attribute_model: <string>
                account_id: <integer>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_attribute_definitions >
          {id}
      summary: Update custom attribute in Account
      description: Update a custom attribute in account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                attribute_display_name: <string>
                attribute_display_type: <integer>
                attribute_description: <string>
                attribute_key: <string>
                attribute_values:
                  - <string>
                  - <string>
                attribute_model: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the custom attribute to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                attribute_display_name: <string>
                attribute_display_type: <string>
                attribute_description: <string>
                attribute_key: <string>
                attribute_values: <string>
                default_value: <string>
                attribute_model: <string>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_attribute_definitions >
          {id}
      summary: Remove a custom attribute from account
      description: Remove a custom attribute from account
      security:
        - apikeyAuth: []
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the custom attribute to be deleted
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/custom_attribute_definitions:
    get:
      tags:
        - api > v1 > accounts > {account_id} > custom_attribute_definitions
      summary: List all custom attributes in an account
      description: Get details of custom attributes in an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: attribute_model
          in: query
          schema:
            type: integer
          description: (Required) conversation_attribute(0)/contact_attribute(1)
          example: "0"
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  attribute_display_name: <string>
                  attribute_display_type: <string>
                  attribute_description: <string>
                  attribute_key: <string>
                  attribute_values: <string>
                  default_value: <string>
                  attribute_model: <string>
                  account_id: <integer>
                - id: <integer>
                  attribute_display_name: <string>
                  attribute_display_type: <string>
                  attribute_description: <string>
                  attribute_key: <string>
                  attribute_values: <string>
                  default_value: <string>
                  attribute_model: <string>
                  account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > custom_attribute_definitions
      summary: Add a new custom attribute
      description: Add a new custom attribute to account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                attribute_display_name: <string>
                attribute_display_type: <integer>
                attribute_description: <string>
                attribute_key: <string>
                attribute_values:
                  - <string>
                  - <string>
                attribute_model: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                attribute_display_name: <string>
                attribute_display_type: <string>
                attribute_description: <string>
                attribute_key: <string>
                attribute_values: <string>
                default_value: <string>
                attribute_model: <string>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/contacts/{id}/conversations:
    get:
      tags:
        - api > v1 > accounts > {account_id} > contacts > {id} > conversations
      summary: Contact Conversations
      description: Get conversations associated to that contact
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  messages:
                    - content: <string>
                      content_type: form
                      content_attributes: {}
                      message_type: template
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                    - content: <string>
                      content_type: cards
                      content_attributes: {}
                      message_type: incoming
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                  account_id: <number>
                  inbox_id: <number>
                  status: resolved
                  timestamp: <string>
                  contact_last_seen_at: <string>
                  agent_last_seen_at: <string>
                  unread_count: <number>
                  additional_attributes: {}
                  custom_attributes: {}
                  meta:
                    sender:
                      id: <number>
                      name: <string>
                      thumbnail: <string>
                      channel: <string>
                    assignee:
                      id: <number>
                      uid: <string>
                      name: <string>
                      available_name: <string>
                      display_name: <string>
                      email: <string>
                      account_id: <number>
                      role: administrator
                      confirmed: <boolean>
                      custom_attributes: {}
                      accounts:
                        - id: <number>
                          name: <string>
                          role: administrator
                        - id: <number>
                          name: <string>
                          role: agent
                  display_id: <number>
                - id: <number>
                  messages:
                    - content: <string>
                      content_type: input_select
                      content_attributes: {}
                      message_type: activity
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                    - content: <string>
                      content_type: input_select
                      content_attributes: {}
                      message_type: outgoing
                      created_at: <integer>
                      private: <boolean>
                      attachment: {}
                      sender: {}
                      conversation_id: <number>
                  account_id: <number>
                  inbox_id: <number>
                  status: open
                  timestamp: <string>
                  contact_last_seen_at: <string>
                  agent_last_seen_at: <string>
                  unread_count: <number>
                  additional_attributes: {}
                  custom_attributes: {}
                  meta:
                    sender:
                      id: <number>
                      name: <string>
                      thumbnail: <string>
                      channel: <string>
                    assignee:
                      id: <number>
                      uid: <string>
                      name: <string>
                      available_name: <string>
                      display_name: <string>
                      email: <string>
                      account_id: <number>
                      role: administrator
                      confirmed: <boolean>
                      custom_attributes: {}
                      accounts:
                        - id: <number>
                          name: <string>
                          role: agent
                        - id: <number>
                          name: <string>
                          role: administrator
                  display_id: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/contacts/{id}/contact_inboxes:
    post:
      tags:
        - api > v1 > accounts > {account_id} > contacts > {id} > contact_inboxes
      summary: Create contact inbox
      description: Create a contact inbox record for an inbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inbox_id: <number>
                source_id: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                source_id: <string>
                inbox:
                  id: <number>
                  name: <string>
                  website_url: <string>
                  channel_type: <string>
                  avatar_url: <string>
                  widget_color: <string>
                  website_token: <string>
                  enable_auto_assignment: <boolean>
                  web_widget_script: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  greeting_enabled: <boolean>
                  greeting_message: <string>
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/contacts/{id}/contactable_inboxes:
    get:
      tags:
        - >-
          api > v1 > accounts > {account_id} > contacts > {id} >
          contactable_inboxes
      summary: Get Contactable Inboxes
      description: Get List of contactable Inboxes
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                source_id: <string>
                inbox:
                  id: <number>
                  name: <string>
                  website_url: <string>
                  channel_type: <string>
                  avatar_url: <string>
                  widget_color: <string>
                  website_token: <string>
                  enable_auto_assignment: <boolean>
                  web_widget_script: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  greeting_enabled: <boolean>
                  greeting_message: <string>
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/contacts/{id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > contacts > {id}
      summary: Show Contact
      description: Get a contact belonging to the account using ID
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                payload:
                  contact:
                    email: <string>
                    name: <string>
                    phone_number: <string>
                    thumbnail: <string>
                    additional_attributes: {}
                    custom_attributes: {}
                    contact_inboxes:
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
                id: <number>
                availability_status: online
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    put:
      tags:
        - api > v1 > accounts > {account_id} > contacts > {id}
      summary: Update Contact
      description: Update a contact belonging to the account using ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                email: <string>
                phone_number: <string>
                avatar: <binary>
                avatar_url: <string>
                identifier: <string>
                custom_attributes: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                payload:
                  contact:
                    email: <string>
                    name: <string>
                    phone_number: <string>
                    thumbnail: <string>
                    additional_attributes: {}
                    custom_attributes: {}
                    contact_inboxes:
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > contacts > {id}
      summary: Delete Contact
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the contact
          example: <number>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/contacts/search:
    get:
      tags:
        - api > v1 > accounts > {account_id} > contacts > search
      summary: Search Contacts
      description: >-
        Search the resolved contacts using a search key, currently supports
        email search (Page size = 15). Resolved contacts are the ones with a
        value for identifier, email or phone number
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: q
          in: query
          schema:
            type: string
          description: Search using contact `name`, `identifier`, `email` or `phone number`
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: The attribute by which list should be sorted
          example: "-email"
        - name: page
          in: query
          schema:
            type: integer
          description: The page parameter
          example: "1"
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                payload:
                  - id: <number>
                    payload:
                      contact:
                        email: <string>
                        name: <string>
                        phone_number: <string>
                        thumbnail: <string>
                        additional_attributes: {}
                        custom_attributes: {}
                        contact_inboxes:
                          - source_id: <string>
                            inbox:
                              id: <number>
                              name: <string>
                              website_url: <string>
                              channel_type: <string>
                              avatar_url: <string>
                              widget_color: <string>
                              website_token: <string>
                              enable_auto_assignment: <boolean>
                              web_widget_script: <string>
                              welcome_title: <string>
                              welcome_tagline: <string>
                              greeting_enabled: <boolean>
                              greeting_message: <string>
                          - source_id: <string>
                            inbox:
                              id: <number>
                              name: <string>
                              website_url: <string>
                              channel_type: <string>
                              avatar_url: <string>
                              widget_color: <string>
                              website_token: <string>
                              enable_auto_assignment: <boolean>
                              web_widget_script: <string>
                              welcome_title: <string>
                              welcome_tagline: <string>
                              greeting_enabled: <boolean>
                              greeting_message: <string>
                  - id: <number>
                    payload:
                      contact:
                        email: <string>
                        name: <string>
                        phone_number: <string>
                        thumbnail: <string>
                        additional_attributes: {}
                        custom_attributes: {}
                        contact_inboxes:
                          - source_id: <string>
                            inbox:
                              id: <number>
                              name: <string>
                              website_url: <string>
                              channel_type: <string>
                              avatar_url: <string>
                              widget_color: <string>
                              website_token: <string>
                              enable_auto_assignment: <boolean>
                              web_widget_script: <string>
                              welcome_title: <string>
                              welcome_tagline: <string>
                              greeting_enabled: <boolean>
                              greeting_message: <string>
                          - source_id: <string>
                            inbox:
                              id: <number>
                              name: <string>
                              website_url: <string>
                              channel_type: <string>
                              avatar_url: <string>
                              widget_color: <string>
                              website_token: <string>
                              enable_auto_assignment: <boolean>
                              web_widget_script: <string>
                              welcome_title: <string>
                              welcome_tagline: <string>
                              greeting_enabled: <boolean>
                              greeting_message: <string>
        "401":
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
  /api/v1/accounts/{account_id}/contacts/filter:
    post:
      tags:
        - api > v1 > accounts > {account_id} > contacts > filter
      summary: Contact Filter
      description: Filter contacts with custom filter options and pagination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payload:
                  - AND
                  - OR
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: page
          in: query
          schema:
            type: string
          example: <integer>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  payload:
                    contact:
                      email: <string>
                      name: <string>
                      phone_number: <string>
                      thumbnail: <string>
                      additional_attributes: {}
                      custom_attributes: {}
                      contact_inboxes:
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                - id: <number>
                  payload:
                    contact:
                      email: <string>
                      name: <string>
                      phone_number: <string>
                      thumbnail: <string>
                      additional_attributes: {}
                      custom_attributes: {}
                      contact_inboxes:
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
  /api/v1/accounts/{account_id}/contacts:
    get:
      tags:
        - api > v1 > accounts > {account_id} > contacts
      summary: List Contacts
      description: >-
        Listing all the resolved contacts with pagination (Page size = 15) .
        Resolved contacts are the ones with a value for identifier, email or
        phone number
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: sort
          in: query
          schema:
            type: string
          description: The attribute by which list should be sorted
          example: "-email"
        - name: page
          in: query
          schema:
            type: integer
          description: The page parameter
          example: "1"
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  payload:
                    contact:
                      email: <string>
                      name: <string>
                      phone_number: <string>
                      thumbnail: <string>
                      additional_attributes: {}
                      custom_attributes: {}
                      contact_inboxes:
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                - id: <number>
                  payload:
                    contact:
                      email: <string>
                      name: <string>
                      phone_number: <string>
                      thumbnail: <string>
                      additional_attributes: {}
                      custom_attributes: {}
                      contact_inboxes:
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
                        - source_id: <string>
                          inbox:
                            id: <number>
                            name: <string>
                            website_url: <string>
                            channel_type: <string>
                            avatar_url: <string>
                            widget_color: <string>
                            website_token: <string>
                            enable_auto_assignment: <boolean>
                            web_widget_script: <string>
                            welcome_title: <string>
                            welcome_tagline: <string>
                            greeting_enabled: <boolean>
                            greeting_message: <string>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
    post:
      tags:
        - api > v1 > accounts > {account_id} > contacts
      summary: Create Contact
      description: Create a new Contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inbox_id: <number>
                name: <string>
                email: <string>
                phone_number: <string>
                avatar: <binary>
                avatar_url: <string>
                identifier: <string>
                custom_attributes: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                payload:
                  contact:
                    email: <string>
                    name: <string>
                    phone_number: <string>
                    thumbnail: <string>
                    additional_attributes: {}
                    custom_attributes: {}
                    contact_inboxes:
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
                      - source_id: <string>
                        inbox:
                          id: <number>
                          name: <string>
                          website_url: <string>
                          channel_type: <string>
                          avatar_url: <string>
                          widget_color: <string>
                          website_token: <string>
                          enable_auto_assignment: <boolean>
                          web_widget_script: <string>
                          welcome_title: <string>
                          welcome_tagline: <string>
                          greeting_enabled: <boolean>
                          greeting_message: <string>
                id: <number>
                availability_status: online
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
  /api/v1/accounts/{account_id}/automation_rules/{id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > automation_rules > {id}
      summary: Get a automation rule details
      description: Get the details of a automation rule in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the automation rule to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                event_name: conversation_updated
                name: <string>
                description: <string>
                active: <boolean>
                account_id: <integer>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > automation_rules > {id}
      summary: Update automation rule in Account
      description: Update a automation rule in account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                event_name: conversation_updated
                active: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the automation rule to be updated.
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                event_name: conversation_updated
                name: <string>
                description: <string>
                active: <boolean>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > automation_rules > {id}
      summary: Remove a automation rule from account
      description: Remove a automation rule from account
      security:
        - apikeyAuth: []
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the automation rule to be deleted
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/automation_rules:
    get:
      tags:
        - api > v1 > accounts > {account_id} > automation_rules
      summary: List all automation rules in an account
      description: Get details of automation rules in an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: page
          in: query
          schema:
            type: integer
          description: The page parameter
          example: "1"
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - event_name: conversation_created
                  name: <string>
                  description: <string>
                  active: <boolean>
                  account_id: <integer>
                - event_name: conversation_created
                  name: <string>
                  description: <string>
                  active: <boolean>
                  account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > automation_rules
      summary: Add a new automation rule
      description: Add a new automation rule to account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                event_name: conversation_updated
                active: <boolean>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                event_name: conversation_updated
                name: <string>
                description: <string>
                active: <boolean>
                account_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/portals/{portal_id}/categories:
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > portals > {portal_id} >
          categories
      summary: Add a new category
      description: Add a new category to portal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: <string>
                locale: <string>
                name: <string>
                slug: <string>
                position: <integer>
                portal_id: <integer>
                account_id: <integer>
                associated_category_id: <integer>
                parent_category_id: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: portal_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                description: <string>
                locale: <string>
                name: <string>
                slug: <string>
                position: <integer>
                portal_id: <integer>
                account_id: <integer>
                associated_category_id: <integer>
                parent_category_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/portals/{portal_id}/articles:
    post:
      tags:
        - api > v1 > accounts > {account_id} > portals > {portal_id} > articles
      summary: Add a new article
      description: Add a new article to portal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: <string>
                meta: {}
                position: <integer>
                status: <integer>
                title: <string>
                slug: <string>
                views: <integer>
                portal_id: <integer>
                account_id: <integer>
                author_id: <integer>
                category_id: <integer>
                folder_id: <integer>
                associated_article_id: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: portal_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                content: <string>
                meta: {}
                position: <integer>
                status: null
                title: <string>
                slug: <string>
                views: <integer>
                portal_id: <integer>
                account_id: <integer>
                author_id: <integer>
                category_id: <integer>
                folder_id: <integer>
                associated_article_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/portals:
    post:
      tags:
        - api > v1 > accounts > {account_id} > portals
      summary: Add a new portal
      description: Add a new portal to account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                archived: <boolean>
                color: <string>
                config: {}
                custom_domain: <string>
                header_text: <string>
                homepage_link: <string>
                name: <string>
                slug: <string>
                page_title: <string>
                account_id: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                archived: <boolean>
                color: <string>
                config: {}
                custom_domain: <string>
                header_text: <string>
                homepage_link: <string>
                name: <string>
                slug: <string>
                page_title: <string>
                account_id: <integer>
                categories:
                  - id: <integer>
                    description: <string>
                    locale: <string>
                    name: <string>
                    slug: <string>
                    position: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    associated_category_id: <integer>
                    parent_category_id: <integer>
                  - id: <integer>
                    description: <string>
                    locale: <string>
                    name: <string>
                    slug: <string>
                    position: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    associated_category_id: <integer>
                    parent_category_id: <integer>
                articles:
                  - id: <integer>
                    content: <string>
                    meta: {}
                    position: <integer>
                    status: null
                    title: <string>
                    slug: <string>
                    views: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    author_id: <integer>
                    category_id: <integer>
                    folder_id: <integer>
                    associated_article_id: <integer>
                  - id: <integer>
                    content: <string>
                    meta: {}
                    position: <integer>
                    status: null
                    title: <string>
                    slug: <string>
                    views: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    author_id: <integer>
                    category_id: <integer>
                    folder_id: <integer>
                    associated_article_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    get:
      tags:
        - api > v1 > accounts > {account_id} > portals
      summary: List all portals in an account
      description: Get details of portals in an Account
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  archived: <boolean>
                  color: <string>
                  config: {}
                  custom_domain: <string>
                  header_text: <string>
                  homepage_link: <string>
                  name: <string>
                  slug: <string>
                  page_title: <string>
                  account_id: <integer>
                  categories:
                    - id: <integer>
                      description: <string>
                      locale: <string>
                      name: <string>
                      slug: <string>
                      position: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      associated_category_id: <integer>
                      parent_category_id: <integer>
                    - id: <integer>
                      description: <string>
                      locale: <string>
                      name: <string>
                      slug: <string>
                      position: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      associated_category_id: <integer>
                      parent_category_id: <integer>
                  articles:
                    - id: <integer>
                      content: <string>
                      meta: {}
                      position: <integer>
                      status: null
                      title: <string>
                      slug: <string>
                      views: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      author_id: <integer>
                      category_id: <integer>
                      folder_id: <integer>
                      associated_article_id: <integer>
                    - id: <integer>
                      content: <string>
                      meta: {}
                      position: <integer>
                      status: null
                      title: <string>
                      slug: <string>
                      views: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      author_id: <integer>
                      category_id: <integer>
                      folder_id: <integer>
                      associated_article_id: <integer>
                - id: <integer>
                  archived: <boolean>
                  color: <string>
                  config: {}
                  custom_domain: <string>
                  header_text: <string>
                  homepage_link: <string>
                  name: <string>
                  slug: <string>
                  page_title: <string>
                  account_id: <integer>
                  categories:
                    - id: <integer>
                      description: <string>
                      locale: <string>
                      name: <string>
                      slug: <string>
                      position: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      associated_category_id: <integer>
                      parent_category_id: <integer>
                    - id: <integer>
                      description: <string>
                      locale: <string>
                      name: <string>
                      slug: <string>
                      position: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      associated_category_id: <integer>
                      parent_category_id: <integer>
                  articles:
                    - id: <integer>
                      content: <string>
                      meta: {}
                      position: <integer>
                      status: null
                      title: <string>
                      slug: <string>
                      views: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      author_id: <integer>
                      category_id: <integer>
                      folder_id: <integer>
                      associated_article_id: <integer>
                    - id: <integer>
                      content: <string>
                      meta: {}
                      position: <integer>
                      status: null
                      title: <string>
                      slug: <string>
                      views: <integer>
                      portal_id: <integer>
                      account_id: <integer>
                      author_id: <integer>
                      category_id: <integer>
                      folder_id: <integer>
                      associated_article_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > portals
      summary: update a new portal
      description: update a new portal to account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                archived: <boolean>
                color: <string>
                config: {}
                custom_domain: <string>
                header_text: <string>
                homepage_link: <string>
                name: <string>
                slug: <string>
                page_title: <string>
                account_id: <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                archived: <boolean>
                color: <string>
                config: {}
                custom_domain: <string>
                header_text: <string>
                homepage_link: <string>
                name: <string>
                slug: <string>
                page_title: <string>
                account_id: <integer>
                categories:
                  - id: <integer>
                    description: <string>
                    locale: <string>
                    name: <string>
                    slug: <string>
                    position: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    associated_category_id: <integer>
                    parent_category_id: <integer>
                  - id: <integer>
                    description: <string>
                    locale: <string>
                    name: <string>
                    slug: <string>
                    position: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    associated_category_id: <integer>
                    parent_category_id: <integer>
                articles:
                  - id: <integer>
                    content: <string>
                    meta: {}
                    position: <integer>
                    status: null
                    title: <string>
                    slug: <string>
                    views: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    author_id: <integer>
                    category_id: <integer>
                    folder_id: <integer>
                    associated_article_id: <integer>
                  - id: <integer>
                    content: <string>
                    meta: {}
                    position: <integer>
                    status: null
                    title: <string>
                    slug: <string>
                    views: <integer>
                    portal_id: <integer>
                    account_id: <integer>
                    author_id: <integer>
                    category_id: <integer>
                    folder_id: <integer>
                    associated_article_id: <integer>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/meta:
    get:
      tags:
        - api > v1 > accounts > {account_id} > conversations > meta
      summary: Get Conversation Counts
      description: Get open, unassigned and all Conversation counts
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: status
          in: query
          schema:
            type: string
          description: Filter by conversation status.
          example: open
        - name: q
          in: query
          schema:
            type: string
          description: Filters conversations with messages containing the search term
          example: <string>
        - name: inbox_id
          in: query
          schema:
            type: string
          example: <integer>
        - name: team_id
          in: query
          schema:
            type: string
          example: <integer>
        - name: labels
          in: query
          schema:
            type: string
          example: <string>,<string>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  mine_count: <number>
                  unassigned_count: <number>
                  assigned_count: <number>
                  all_count: <number>
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
  /api/v1/accounts/{account_id}/conversations/filter:
    post:
      tags:
        - api > v1 > accounts > {account_id} > conversations > filter
      summary: Conversations Filter
      description: Filter conversations with custom filter options and pagination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                payload:
                  - attribute_key: <string>
                    filter_operator: equal_to
                    values:
                      - <string>
                      - <string>
                    query_operator: OR
                  - attribute_key: <string>
                    filter_operator: not_equal_to
                    values:
                      - <string>
                      - <string>
                    query_operator: AND
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: page
          in: query
          schema:
            type: string
          example: <integer>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  meta:
                    mine_count: <number>
                    unassigned_count: <number>
                    assigned_count: <number>
                    all_count: <number>
                  payload:
                    - id: <number>
                      messages:
                        - content: <string>
                          content_type: cards
                          content_attributes: {}
                          message_type: outgoing
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                        - content: <string>
                          content_type: form
                          content_attributes: {}
                          message_type: template
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                      account_id: <number>
                      inbox_id: <number>
                      status: resolved
                      timestamp: <string>
                      contact_last_seen_at: <string>
                      agent_last_seen_at: <string>
                      unread_count: <number>
                      additional_attributes: {}
                      custom_attributes: {}
                      meta:
                        sender:
                          id: <number>
                          name: <string>
                          thumbnail: <string>
                          channel: <string>
                        assignee:
                          id: <number>
                          uid: <string>
                          name: <string>
                          available_name: <string>
                          display_name: <string>
                          email: <string>
                          account_id: <number>
                          role: administrator
                          confirmed: <boolean>
                          custom_attributes: {}
                          accounts:
                            - id: <number>
                              name: <string>
                              role: administrator
                            - id: <number>
                              name: <string>
                              role: agent
                    - id: <number>
                      messages:
                        - content: <string>
                          content_type: form
                          content_attributes: {}
                          message_type: outgoing
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                        - content: <string>
                          content_type: input_select
                          content_attributes: {}
                          message_type: incoming
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                      account_id: <number>
                      inbox_id: <number>
                      status: resolved
                      timestamp: <string>
                      contact_last_seen_at: <string>
                      agent_last_seen_at: <string>
                      unread_count: <number>
                      additional_attributes: {}
                      custom_attributes: {}
                      meta:
                        sender:
                          id: <number>
                          name: <string>
                          thumbnail: <string>
                          channel: <string>
                        assignee:
                          id: <number>
                          uid: <string>
                          name: <string>
                          available_name: <string>
                          display_name: <string>
                          email: <string>
                          account_id: <number>
                          role: agent
                          confirmed: <boolean>
                          custom_attributes: {}
                          accounts:
                            - id: <number>
                              name: <string>
                              role: agent
                            - id: <number>
                              name: <string>
                              role: agent
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/toggle_status:
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > toggle_status
      summary: Toggle Status
      description: Toggles the status of the conversation between open and resolved
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: resolved
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                meta: {}
                payload:
                  success: <boolean>
                  current_status: open
                  conversation_id: <number>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/toggle_priority:
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > toggle_priority
      summary: Toggle Priority
      description: Toggles the priority of conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                priority: urgent
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/assignments:
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > assignments
      summary: Assign Conversation
      description: Assign a conversation to an agent or a team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                assignee_id: <number>
                team_id: <number>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <number>
                role: administrator
                confirmed: <boolean>
                custom_attributes: {}
                accounts:
                  - id: <number>
                    name: <string>
                    role: administrator
                  - id: <number>
                    name: <string>
                    role: agent
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/labels:
    get:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > labels
      summary: List Labels
      description: Lists all the labels of a conversation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                payload:
                  - <string>
                  - <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > labels
      summary: Add Labels
      description: >-
        Add labels to a conversation. Note that this API would overwrite the
        existing list of labels associated to the conversation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                labels:
                  - <string>
                  - <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                payload:
                  - <string>
                  - <string>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/messages/{message_id}:
    delete:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > messages > {message_id}
      summary: Delete a message
      description: Delete a message and it's attachments from the conversation.
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
        - name: message_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the message
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/messages:
    get:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > messages
      summary: Get messages
      description: List all messages of a conversation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  content: <string>
                  content_type: input_select
                  content_attributes: {}
                  message_type: activity
                  created_at: <integer>
                  private: <boolean>
                  attachment: {}
                  sender: {}
                  conversation_id: <number>
                - id: <number>
                  content: <string>
                  content_type: input_select
                  content_attributes: {}
                  message_type: outgoing
                  created_at: <integer>
                  private: <boolean>
                  attachment: {}
                  sender: {}
                  conversation_id: <number>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - >-
          api > v1 > accounts > {account_id} > conversations > {conversation_id}
          > messages
      summary: Create New Message
      description: Create a new message in the conversation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: <string>
                message_type: incoming
                private: <boolean>
                content_type: input_email
                content_attributes: {}
                template_params:
                  name: <string>
                  category: <string>
                  language: <string>
                  processed_params: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                content: <string>
                content_type: text
                content_attributes: {}
                message_type: template
                created_at: <integer>
                private: <boolean>
                attachment: {}
                sender: {}
                conversation_id: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations/{conversation_id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > conversations > {conversation_id}
      summary: Conversation Details
      description: >-
        Get all details regarding a conversation with all messages in the
        conversation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: conversation_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the conversation
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                messages:
                  - content: <string>
                    content_type: form
                    content_attributes: {}
                    message_type: outgoing
                    created_at: <integer>
                    private: <boolean>
                    attachment: {}
                    sender: {}
                    conversation_id: <number>
                  - content: <string>
                    content_type: form
                    content_attributes: {}
                    message_type: outgoing
                    created_at: <integer>
                    private: <boolean>
                    attachment: {}
                    sender: {}
                    conversation_id: <number>
                account_id: <number>
                inbox_id: <number>
                status: resolved
                timestamp: <string>
                contact_last_seen_at: <string>
                agent_last_seen_at: <string>
                unread_count: <number>
                additional_attributes: {}
                custom_attributes: {}
                meta:
                  sender:
                    id: <number>
                    name: <string>
                    thumbnail: <string>
                    channel: <string>
                  assignee:
                    id: <number>
                    uid: <string>
                    name: <string>
                    available_name: <string>
                    display_name: <string>
                    email: <string>
                    account_id: <number>
                    role: agent
                    confirmed: <boolean>
                    custom_attributes: {}
                    accounts:
                      - id: <number>
                        name: <string>
                        role: agent
                      - id: <number>
                        name: <string>
                        role: agent
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/conversations:
    get:
      tags:
        - api > v1 > accounts > {account_id} > conversations
      summary: Conversations List
      description: List all the conversations with pagination
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: assignee_type
          in: query
          schema:
            type: string
          description: Filter conversations by assignee type.
          example: all
        - name: status
          in: query
          schema:
            type: string
          description: Filter by conversation status.
          example: open
        - name: q
          in: query
          schema:
            type: string
          description: Filters conversations with messages containing the search term
          example: <string>
        - name: inbox_id
          in: query
          schema:
            type: string
          example: <integer>
        - name: team_id
          in: query
          schema:
            type: string
          example: <integer>
        - name: labels
          in: query
          schema:
            type: string
          example: <string>,<string>
        - name: page
          in: query
          schema:
            type: integer
          description: paginate through conversations
          example: "1"
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  meta:
                    mine_count: <number>
                    unassigned_count: <number>
                    assigned_count: <number>
                    all_count: <number>
                  payload:
                    - id: <number>
                      messages:
                        - content: <string>
                          content_type: cards
                          content_attributes: {}
                          message_type: outgoing
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                        - content: <string>
                          content_type: form
                          content_attributes: {}
                          message_type: template
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                      account_id: <number>
                      inbox_id: <number>
                      status: resolved
                      timestamp: <string>
                      contact_last_seen_at: <string>
                      agent_last_seen_at: <string>
                      unread_count: <number>
                      additional_attributes: {}
                      custom_attributes: {}
                      meta:
                        sender:
                          id: <number>
                          name: <string>
                          thumbnail: <string>
                          channel: <string>
                        assignee:
                          id: <number>
                          uid: <string>
                          name: <string>
                          available_name: <string>
                          display_name: <string>
                          email: <string>
                          account_id: <number>
                          role: administrator
                          confirmed: <boolean>
                          custom_attributes: {}
                          accounts:
                            - id: <number>
                              name: <string>
                              role: administrator
                            - id: <number>
                              name: <string>
                              role: agent
                    - id: <number>
                      messages:
                        - content: <string>
                          content_type: form
                          content_attributes: {}
                          message_type: outgoing
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                        - content: <string>
                          content_type: input_select
                          content_attributes: {}
                          message_type: incoming
                          created_at: <integer>
                          private: <boolean>
                          attachment: {}
                          sender: {}
                          conversation_id: <number>
                      account_id: <number>
                      inbox_id: <number>
                      status: resolved
                      timestamp: <string>
                      contact_last_seen_at: <string>
                      agent_last_seen_at: <string>
                      unread_count: <number>
                      additional_attributes: {}
                      custom_attributes: {}
                      meta:
                        sender:
                          id: <number>
                          name: <string>
                          thumbnail: <string>
                          channel: <string>
                        assignee:
                          id: <number>
                          uid: <string>
                          name: <string>
                          available_name: <string>
                          display_name: <string>
                          email: <string>
                          account_id: <number>
                          role: agent
                          confirmed: <boolean>
                          custom_attributes: {}
                          accounts:
                            - id: <number>
                              name: <string>
                              role: agent
                            - id: <number>
                              name: <string>
                              role: agent
        "400":
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                errors:
                  - field: <string>
                    message: <string>
                    code: <string>
                  - field: <string>
                    message: <string>
                    code: <string>
    post:
      tags:
        - api > v1 > accounts > {account_id} > conversations
      summary: Create New Conversation
      description: |-
        Creating a conversation in chatwoot requires a source id. 

         Learn more about source_id: https://github.com/chatwoot/chatwoot/wiki/Building-on-Top-of-Chatwoot:-Importing-Existing-Contacts-and-Creating-Conversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                source_id: <string>
                inbox_id: <string>
                contact_id: <string>
                additional_attributes: {}
                custom_attributes: {}
                status: open
                assignee_id: <string>
                team_id: <string>
                message:
                  content: <string>
                  template_params:
                    name: <string>
                    category: <string>
                    language: <string>
                    processed_params: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                account_id: <number>
                inbox_id: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes/{id}/agent_bot:
    get:
      tags:
        - api > v1 > accounts > {account_id} > inboxes > {id} > agent_bot
      summary: Show Inbox Agent Bot
      description: See if an agent bot is associated to the Inbox
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the inbox
          example: <number>
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                account_id: <number>
                outgoing_url: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes/{id}/set_agent_bot:
    post:
      tags:
        - api > v1 > accounts > {account_id} > inboxes > {id} > set_agent_bot
      summary: Add or remove agent bot
      description: >-
        To add an agent bot pass agent_bot id, to remove agent bot from an inbox
        pass null
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                agent_bot: <number>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the inbox
          example: <number>
      responses:
        "204":
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes/{id}/:
    get:
      tags:
        - api > v1 > accounts > {account_id} > inboxes > {id}
      summary: Get an inbox
      description: Get an inbox available in the current account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the inbox
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                website_url: <string>
                channel_type: <string>
                avatar_url: <string>
                widget_color: <string>
                website_token: <string>
                enable_auto_assignment: <boolean>
                web_widget_script: <string>
                welcome_title: <string>
                welcome_tagline: <string>
                greeting_enabled: <boolean>
                greeting_message: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes/{id}:
    patch:
      tags:
        - api > v1 > accounts > {account_id} > inboxes > {id}
      summary: Update Inbox
      description: Add avatar and disable auto assignment for an inbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                enable_auto_assignment: <boolean>
                name: <string>
                avatar: <binary>
                channel:
                  website_url: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  agent_away_message: <string>
                  widget_color: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the inbox
          example: <number>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                website_url: <string>
                channel_type: <string>
                avatar_url: <string>
                widget_color: <string>
                website_token: <string>
                enable_auto_assignment: <boolean>
                web_widget_script: <string>
                welcome_title: <string>
                welcome_tagline: <string>
                greeting_enabled: <boolean>
                greeting_message: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes:
    get:
      tags:
        - api > v1 > accounts > {account_id} > inboxes
      summary: List all inboxes
      description: List all inboxes available in the current account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  website_url: <string>
                  channel_type: <string>
                  avatar_url: <string>
                  widget_color: <string>
                  website_token: <string>
                  enable_auto_assignment: <boolean>
                  web_widget_script: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  greeting_enabled: <boolean>
                  greeting_message: <string>
                - id: <number>
                  name: <string>
                  website_url: <string>
                  channel_type: <string>
                  avatar_url: <string>
                  widget_color: <string>
                  website_token: <string>
                  enable_auto_assignment: <boolean>
                  web_widget_script: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  greeting_enabled: <boolean>
                  greeting_message: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inboxes/:
    post:
      tags:
        - api > v1 > accounts > {account_id} > inboxes
      summary: Create an inbox
      description: You can create more than one website inbox in each account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                avatar: <binary>
                channel:
                  type: web_widget
                  website_url: <string>
                  welcome_title: <string>
                  welcome_tagline: <string>
                  agent_away_message: <string>
                  widget_color: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                website_url: <string>
                channel_type: <string>
                avatar_url: <string>
                widget_color: <string>
                website_token: <string>
                enable_auto_assignment: <boolean>
                web_widget_script: <string>
                welcome_title: <string>
                welcome_tagline: <string>
                greeting_enabled: <boolean>
                greeting_message: <string>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inbox_members/{inbox_id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > inbox_members > {inbox_id}
      summary: List Agents in Inbox
      description: Get Details of Agents in an Inbox
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: inbox_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Inbox
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: busy
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/inbox_members:
    post:
      tags:
        - api > v1 > accounts > {account_id} > inbox_members
      summary: Add a New Agent
      description: Add a new Agent to Inbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inbox_id: <string>
                user_ids:
                  - <integer>
                  - <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: busy
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > inbox_members
      summary: Update Agents in Inbox
      description: All agents except the one passed in params will be removed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inbox_id: <string>
                user_ids:
                  - <integer>
                  - <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: busy
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > inbox_members
      summary: Remove an Agent from Inbox
      description: Remove an Agent from Inbox
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/integrations/apps:
    get:
      tags:
        - api > v1 > accounts > {account_id} > integrations > apps
      summary: List all the Integrations
      description: Get the details of all Integrations available for the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <string>
                  name: <string>
                  description: <string>
                  hook_type: <string>
                  enabled: <boolean>
                  allow_multiple_hooks: <boolean>
                - id: <string>
                  name: <string>
                  description: <string>
                  hook_type: <string>
                  enabled: <boolean>
                  allow_multiple_hooks: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/integrations/hooks/{hook_id}:
    patch:
      tags:
        - api > v1 > accounts > {account_id} > integrations > hooks > {hook_id}
      summary: Update an Integration Hook
      description: Update an Integration Hook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                settings: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the integration hook
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                app_id: <string>
                inbox_id: <string>
                account_id: <string>
                status: <boolean>
                hook_type: <boolean>
                settings: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > integrations > hooks > {hook_id}
      summary: Delete an Integration Hook
      description: Delete an Integration Hook
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: hook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the integration hook
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/integrations/hooks:
    post:
      tags:
        - api > v1 > accounts > {account_id} > integrations > hooks
      summary: Create an integration hook
      description: Create an integration hook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                app_id: <string>
                inbox_id: <string>
                settings: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                app_id: <string>
                inbox_id: <string>
                account_id: <string>
                status: <boolean>
                hook_type: <boolean>
                settings: {}
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/teams/{team_id}/team_members:
    get:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id} > team_members
      summary: List Agents in Team
      description: Get Details of Agents in an Team
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: offline
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id} > team_members
      summary: Add a New Agent
      description: Add a new Agent to Team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_ids:
                  - <integer>
                  - <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: busy
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id} > team_members
      summary: Update Agents in Team
      description: All agents except the one passed in params will be removed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_ids:
                  - <integer>
                  - <integer>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: administrator
                  confirmed: <boolean>
                  availability_status: available
                  auto_offline: <boolean>
                  custom_attributes: {}
                - id: <integer>
                  uid: <string>
                  name: <string>
                  available_name: <string>
                  display_name: <string>
                  email: <string>
                  account_id: <integer>
                  role: agent
                  confirmed: <boolean>
                  availability_status: offline
                  auto_offline: <boolean>
                  custom_attributes: {}
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id} > team_members
      summary: Remove an Agent from Team
      description: Remove an Agent from Team
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "422":
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/teams/{team_id}:
    get:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id}
      summary: Get a team details
      description: Get the details of a team in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                allow_auto_assign: <boolean>
                account_id: <number>
                is_member: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id}
      summary: Update a team
      description: Update a team's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                allow_auto_assign: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                allow_auto_assign: <boolean>
                account_id: <number>
                is_member: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > teams > {team_id}
      summary: Delete a team
      description: Delete a team from the account
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the team to be updated
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/teams:
    get:
      tags:
        - api > v1 > accounts > {account_id} > teams
      summary: List all teams
      description: List all teams available in the current account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  description: <string>
                  allow_auto_assign: <boolean>
                  account_id: <number>
                  is_member: <boolean>
                - id: <number>
                  name: <string>
                  description: <string>
                  allow_auto_assign: <boolean>
                  account_id: <number>
                  is_member: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > teams
      summary: Create a team
      description: Create a team in the account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                description: <string>
                allow_auto_assign: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                description: <string>
                allow_auto_assign: <boolean>
                account_id: <number>
                is_member: <boolean>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/custom_filters/{custom_filter_id}:
    get:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_filters >
          {custom_filter_id}
      summary: Get a custom filter details
      description: Get the details of a custom filter in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: custom_filter_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the custom filter
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                type: report
                query: {}
                created_at: <dateTime>
                updated_at: <dateTime>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
    patch:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_filters >
          {custom_filter_id}
      summary: Update a custom filter
      description: Update a custom filter's attributes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: conversation
                query: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: custom_filter_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the custom filter
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                type: report
                query: {}
                created_at: <dateTime>
                updated_at: <dateTime>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - >-
          api > v1 > accounts > {account_id} > custom_filters >
          {custom_filter_id}
      summary: Delete a custom filter
      description: Delete a custom filter from the account
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: custom_filter_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the custom filter
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/custom_filters:
    get:
      tags:
        - api > v1 > accounts > {account_id} > custom_filters
      summary: List all custom filters
      description: List all custom filters in a category of a user
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: filter_type
          in: query
          schema:
            type: string
          description: The type of custom filter
          example: report
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  type: report
                  query: {}
                  created_at: <dateTime>
                  updated_at: <dateTime>
                - id: <number>
                  name: <string>
                  type: conversation
                  query: {}
                  created_at: <dateTime>
                  updated_at: <dateTime>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > custom_filters
      summary: Create a custom filter
      description: Create a custom filter in the account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: conversation
                query: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: filter_type
          in: query
          schema:
            type: string
          description: The type of custom filter
          example: report
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                name: <string>
                type: report
                query: {}
                created_at: <dateTime>
                updated_at: <dateTime>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/webhooks/{webhook_id}:
    patch:
      tags:
        - api > v1 > accounts > {account_id} > webhooks > {webhook_id}
      summary: Update a webhook object
      description: Update a webhook object in the account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                url: <string>
                subscriptions:
                  - message_created
                  - conversation_status_changed
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: webhook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the webhook
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                url: <string>
                subscriptions:
                  - conversation_created
                  - conversation_status_changed
                account_id: <number>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    delete:
      tags:
        - api > v1 > accounts > {account_id} > webhooks > {webhook_id}
      summary: Delete a webhook
      description: Delete a webhook from the account
      parameters:
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
        - name: webhook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the webhook
          example: <integer>
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/accounts/{account_id}/webhooks:
    get:
      tags:
        - api > v1 > accounts > {account_id} > webhooks
      summary: List all webhooks
      description: List all webhooks in the account
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  url: <string>
                  subscriptions:
                    - webwidget_triggered
                    - webwidget_triggered
                  account_id: <number>
                - id: <number>
                  url: <string>
                  subscriptions:
                    - conversation_created
                    - contact_created
                  account_id: <number>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
    post:
      tags:
        - api > v1 > accounts > {account_id} > webhooks
      summary: Add a webhook
      description: Add a webhook subscription to the account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                url: <string>
                subscriptions:
                  - message_created
                  - conversation_status_changed
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                url: <string>
                subscriptions:
                  - conversation_created
                  - conversation_status_changed
                account_id: <number>
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v1/profile:
    get:
      tags:
        - api > v1 > profile
      summary: Fetch user profile
      description: Get the user profile details
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                id: <number>
                uid: <string>
                name: <string>
                available_name: <string>
                display_name: <string>
                email: <string>
                account_id: <number>
                role: administrator
                confirmed: <boolean>
                custom_attributes: {}
                accounts:
                  - id: <number>
                    name: <string>
                    role: administrator
                  - id: <number>
                    name: <string>
                    role: agent
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v2/accounts/{account_id}/reports/summary:
    get:
      tags:
        - api > v2 > accounts > {account_id} > reports > summary
      summary: Get Account reports summary
      description: Get Account reports summary for a specific type and date range
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: type
          in: query
          schema:
            type: string
          description: (Required) Type of report
          example: account
        - name: id
          in: query
          schema:
            type: string
          description: The Id of specific object in case of agent/inbox/label
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: The timestamp from where report should start.
          example: <string>
        - name: until
          in: query
          schema:
            type: string
          description: The timestamp from where report should stop.
          example: <string>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                avg_first_response_time: <string>
                avg_resolution_time: <string>
                conversations_count: <number>
                incoming_messages_count: <number>
                outgoing_messages_count: <number>
                resolutions_count: <number>
                previous:
                  avg_first_response_time: <string>
                  avg_resolution_time: <string>
                  conversations_count: <number>
                  incoming_messages_count: <number>
                  outgoing_messages_count: <number>
                  resolutions_count: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v2/accounts/{account_id}/reports/conversations/:
    get:
      tags:
        - api > v2 > accounts > {account_id} > reports > conversations
      summary: Agent Conversation Metrics
      description: Get conversation metrics for Agent
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: type
          in: query
          schema:
            type: string
          description: (Required) Type of report
          example: agent
        - name: user_id
          in: query
          schema:
            type: string
          description: The numeric ID of the user
          example: <string>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <number>
                  name: <string>
                  email: <string>
                  thumbnail: <string>
                  availability: <string>
                  metric:
                    open: <number>
                    unattended: <number>
                - id: <number>
                  name: <string>
                  email: <string>
                  thumbnail: <string>
                  availability: <string>
                  metric:
                    open: <number>
                    unattended: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
  /api/v2/accounts/{account_id}/reports:
    get:
      tags:
        - api > v2 > accounts > {account_id} > reports
      summary: Get Account reports
      description: Get Account reports for a specific type, metric and date range
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json; charset=utf-8
        - name: metric
          in: query
          schema:
            type: string
          description: (Required) The type of metric
          example: conversations_count
        - name: type
          in: query
          schema:
            type: string
          description: (Required) Type of report
          example: account
        - name: id
          in: query
          schema:
            type: string
          description: The Id of specific object in case of agent/inbox/label
          example: <string>
        - name: since
          in: query
          schema:
            type: string
          description: The timestamp from where report should start.
          example: <string>
        - name: until
          in: query
          schema:
            type: string
          description: The timestamp from where report should stop.
          example: <string>
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The numeric ID of the account
          example: <integer>
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
              example:
                - value: <string>
                  timestamp: <number>
                - value: <string>
                  timestamp: <number>
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ""
        "404":
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ""
